/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainWindow.java
 *
 * Created on Sep 29, 2011, 1:35:13 AM
 */
package ontogeneticapp;

import java.util.Random;

/**
 *
 * @author wfbarksdale
 */
public class MainWindow extends javax.swing.JFrame {

    /** Creates new form MainWindow */
    public MainWindow() {
        initComponents();
    }
    //*********************************MY CODE***************************
    public AppController controller;
    public void setController(AppController aController){
        controller = aController;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        strategy = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        populationView = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pSize = new javax.swing.JTextField();
        eSize = new javax.swing.JTextField();
        gSize = new javax.swing.JTextField();
        functionSize = new javax.swing.JTextField();
        maxInstructions = new javax.swing.JTextField();
        crossoverFrequency = new javax.swing.JTextField();
        mutationFrequency = new javax.swing.JTextField();
        runButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        statsPath = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        bSize = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        functionString = new javax.swing.JTextField();
        sequenceTextfield = new javax.swing.JTextField();
        sequenceCheckbox = new javax.swing.JCheckBox();
        segcopyCheckbox = new javax.swing.JCheckBox();
        transposeCheckbox = new javax.swing.JCheckBox();
        memoryCheckbox = new javax.swing.JCheckBox();
        reverseCheckbox = new javax.swing.JCheckBox();
        seedCheckbox = new javax.swing.JCheckBox();
        seedTextField = new javax.swing.JTextField();
        ElitismRadioButton = new javax.swing.JRadioButton();
        AgingRadioButton = new javax.swing.JRadioButton();
        DeathRadioButton = new javax.swing.JRadioButton();
        maxAgeTextField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        numRuns = new javax.swing.JTextField();
        organismView = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        genomeToLoad = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        genomeContents = new javax.swing.JLabel();
        currentX = new javax.swing.JLabel();
        stackContents = new javax.swing.JLabel();
        expectedX = new javax.swing.JLabel();
        returnedX = new javax.swing.JLabel();
        loadGenomeButton = new javax.swing.JButton();
        stepButton = new javax.swing.JButton();
        jumpButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        organismInstructionCount = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        memoryLabel = new javax.swing.JLabel();
        orgviewFunctionString = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        orgviewSequenceCheckbox = new javax.swing.JCheckBox();
        orgviewSequenceString = new javax.swing.JTextField();
        orgviewReverseCheckbox = new javax.swing.JCheckBox();
        orgviewFunctionSize = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Apple Color Emoji", 0, 10));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("pSize");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("eSize");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("gSize");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("functionSize");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("maxInstructions");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("crossoverFrequency");

        jLabel7.setText("mutationFrequency");

        pSize.setText("5000");

        eSize.setText("5000");

        gSize.setText("30");

        functionSize.setText("30");

        maxInstructions.setText("30");

        crossoverFrequency.setText(".75");
        crossoverFrequency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crossoverFrequencyActionPerformed(evt);
            }
        });

        mutationFrequency.setText(".05");

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        statsPath.setText("/Users/wfbarksdale/School/Richmond_2012/GP/tester.txt");

        jLabel15.setText("Stats Path");

        bSize.setText(".5");

        jLabel16.setText("bSize");

        jLabel18.setText("Function:");

        functionString.setText("x*x");
        functionString.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                functionStringActionPerformed(evt);
            }
        });

        sequenceTextfield.setText("101011");
        sequenceTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequenceTextfieldActionPerformed(evt);
            }
        });

        sequenceCheckbox.setText("Sequence");
        sequenceCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequenceCheckboxActionPerformed(evt);
            }
        });

        segcopyCheckbox.setText("Seg Copy:");

        transposeCheckbox.setText("Transpose");

        memoryCheckbox.setText("Indexed Memory");

        reverseCheckbox.setText("Reverse x");

        seedCheckbox.setText("Seed:");

        seedTextField.setText("123456789");

        strategy.add(ElitismRadioButton);
        ElitismRadioButton.setSelected(true);
        ElitismRadioButton.setText("Elitism");

        strategy.add(AgingRadioButton);
        AgingRadioButton.setText("Aging");

        strategy.add(DeathRadioButton);
        DeathRadioButton.setText("Death");

        maxAgeTextField.setText("5");

        jLabel20.setText("numRuns:");

        numRuns.setText("1");

        org.jdesktop.layout.GroupLayout populationViewLayout = new org.jdesktop.layout.GroupLayout(populationView);
        populationView.setLayout(populationViewLayout);
        populationViewLayout.setHorizontalGroup(
            populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(populationViewLayout.createSequentialGroup()
                .addContainerGap()
                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(DeathRadioButton)
                    .add(populationViewLayout.createSequentialGroup()
                        .add(AgingRadioButton)
                        .add(18, 18, 18)
                        .add(maxAgeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(populationViewLayout.createSequentialGroup()
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                            .add(jLabel15))
                        .add(18, 18, 18)
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(statsPath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 530, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(populationViewLayout.createSequentialGroup()
                                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(mutationFrequency)
                                        .add(crossoverFrequency)
                                        .add(maxInstructions)
                                        .add(functionSize)
                                        .add(gSize)
                                        .add(eSize)
                                        .add(pSize, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                                    .add(populationViewLayout.createSequentialGroup()
                                        .add(runButton)
                                        .add(18, 18, 18)
                                        .add(stopButton)))
                                .add(30, 30, 30)
                                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(reverseCheckbox)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, populationViewLayout.createSequentialGroup()
                                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, populationViewLayout.createSequentialGroup()
                                                .add(seedCheckbox)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                .add(seedTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, segcopyCheckbox)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, transposeCheckbox)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, memoryCheckbox)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, populationViewLayout.createSequentialGroup()
                                                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                                    .add(sequenceCheckbox)
                                                    .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                        .add(jLabel16)
                                                        .add(jLabel18)))
                                                .add(18, 18, 18)
                                                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(bSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                    .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                        .add(functionString, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                                                        .add(sequenceTextfield, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)))))
                                        .add(44, 44, 44))))))
                    .add(populationViewLayout.createSequentialGroup()
                        .add(ElitismRadioButton)
                        .add(279, 279, 279)
                        .add(jLabel20)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(numRuns, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)))
                .addContainerGap())
        );
        populationViewLayout.setVerticalGroup(
            populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(populationViewLayout.createSequentialGroup()
                .addContainerGap()
                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(populationViewLayout.createSequentialGroup()
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(pSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(eSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(populationViewLayout.createSequentialGroup()
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel16)
                            .add(bSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel18)
                            .add(functionString, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(18, 18, 18)
                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(gSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(sequenceCheckbox)
                    .add(sequenceTextfield, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(populationViewLayout.createSequentialGroup()
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(functionSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(maxInstructions, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(transposeCheckbox)))
                    .add(segcopyCheckbox))
                .add(18, 18, 18)
                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(populationViewLayout.createSequentialGroup()
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel6)
                            .add(crossoverFrequency, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel7)
                            .add(mutationFrequency, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(reverseCheckbox)))
                    .add(memoryCheckbox))
                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(populationViewLayout.createSequentialGroup()
                        .add(26, 26, 26)
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(runButton)
                            .add(stopButton)))
                    .add(populationViewLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(seedCheckbox)
                            .add(seedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(statsPath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel15))
                .add(29, 29, 29)
                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ElitismRadioButton)
                    .add(jLabel20)
                    .add(numRuns, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(populationViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(AgingRadioButton)
                    .add(maxAgeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(DeathRadioButton)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Population", populationView);

        genomeToLoad.setColumns(20);
        genomeToLoad.setLineWrap(true);
        genomeToLoad.setRows(5);
        jScrollPane1.setViewportView(genomeToLoad);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Genome:");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Stack:");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("current x:");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("expected x:");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("returned x:");

        genomeContents.setFont(new java.awt.Font("Monospaced", 0, 12));
        genomeContents.setText(">");

        currentX.setText("0");

        stackContents.setText("|");

        expectedX.setText("0");

        returnedX.setText("0");

        loadGenomeButton.setText("Load Genome");
        loadGenomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadGenomeButtonActionPerformed(evt);
            }
        });

        stepButton.setText("step");
        stepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepButtonActionPerformed(evt);
            }
        });

        jumpButton.setText("Jump");
        jumpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumpButtonActionPerformed(evt);
            }
        });

        jLabel14.setText("Instuction Count:");

        organismInstructionCount.setText("0");

        jLabel17.setText("Memory");

        memoryLabel.setText("[]");

        orgviewFunctionString.setText("x*x");

        jLabel19.setText("Function:");

        orgviewSequenceCheckbox.setText("Sequence");

        orgviewSequenceString.setText("101011");

        orgviewReverseCheckbox.setText("Reverse");

        orgviewFunctionSize.setText("30");

        jLabel13.setText("Function Size");

        org.jdesktop.layout.GroupLayout organismViewLayout = new org.jdesktop.layout.GroupLayout(organismView);
        organismView.setLayout(organismViewLayout);
        organismViewLayout.setHorizontalGroup(
            organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(organismViewLayout.createSequentialGroup()
                .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(organismViewLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, organismViewLayout.createSequentialGroup()
                                .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel17)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jLabel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                        .add(jLabel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jLabel11, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jLabel14)))
                                .add(18, 18, 18)
                                .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(organismViewLayout.createSequentialGroup()
                                        .add(memoryLabel)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(genomeContents, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, organismInstructionCount)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, expectedX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 177, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, currentX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(stackContents, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, organismViewLayout.createSequentialGroup()
                                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(jLabel19)
                                            .add(returnedX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 164, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                .add(orgviewReverseCheckbox)
                                                .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                                    .add(jLabel13)
                                                    .add(orgviewSequenceCheckbox))))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(orgviewSequenceString)
                                            .add(orgviewFunctionString, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                            .add(orgviewFunctionSize)))))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, organismViewLayout.createSequentialGroup()
                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                                .add(232, 232, 232))))
                    .add(organismViewLayout.createSequentialGroup()
                        .add(46, 46, 46)
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(stepButton)
                            .add(jumpButton))
                        .add(845, 845, 845))
                    .add(organismViewLayout.createSequentialGroup()
                        .add(28, 28, 28)
                        .add(loadGenomeButton)))
                .addContainerGap())
        );
        organismViewLayout.setVerticalGroup(
            organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(organismViewLayout.createSequentialGroup()
                .addContainerGap()
                .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(organismViewLayout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(34, 34, 34)
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel8)
                            .add(genomeContents, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 161, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel9)
                            .add(stackContents))
                        .add(18, 18, 18)
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel10)
                            .add(currentX))
                        .add(18, 18, 18)
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel11)
                            .add(expectedX))
                        .add(18, 18, 18)
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel12)
                            .add(returnedX))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(organismViewLayout.createSequentialGroup()
                                .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel14)
                                    .add(organismInstructionCount))
                                .add(55, 55, 55)
                                .add(loadGenomeButton))
                            .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel19)
                                .add(orgviewFunctionString, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(18, 18, 18)
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(stepButton)
                            .add(orgviewSequenceCheckbox)
                            .add(orgviewSequenceString, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jumpButton)
                            .add(orgviewReverseCheckbox))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 10, Short.MAX_VALUE)
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(orgviewFunctionSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel13))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, organismViewLayout.createSequentialGroup()
                        .add(organismViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel17)
                            .add(memoryLabel))
                        .add(393, 393, 393))))
        );

        jTabbedPane1.addTab("Organism", organismView);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1013, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 748, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
    Globals globals = new Globals();
    if(seedCheckbox.isSelected()){
        globals.seed = Integer.parseInt(seedTextField.getText());
    }else{
        globals.seed = System.currentTimeMillis();
    }
    globals.elitistStrategy = ElitismRadioButton.isSelected();
    globals.agingStrategy = AgingRadioButton.isSelected();
    if(globals.agingStrategy){
        globals.maxAge = Integer.parseInt(maxAgeTextField.getText());
    }
    globals.numRuns = Integer.parseInt(numRuns.getText());
    globals.deathStrategy = DeathRadioButton.isSelected();
    globals.chaos = new Random(globals.seed);
    globals.crossoverFrequency = Double.parseDouble(crossoverFrequency.getText());
    globals.eSize = Integer.parseInt(eSize.getText());
    globals.gSize = Integer.parseInt(gSize.getText());
    globals.maxInstructions = Integer.parseInt(maxInstructions.getText());
    globals.mutationFrequency = Double.parseDouble(mutationFrequency.getText());
    globals.functionSize = Integer.parseInt(functionSize.getText());
    globals.pSize = Integer.parseInt(pSize.getText());
    globals.bSize = Double.parseDouble(bSize.getText());
    globals.function = new FunctionGenerator();
    globals.reverseFunction = reverseCheckbox.isSelected();
    globals.useMemory = memoryCheckbox.isSelected();
    globals.useSegCopy = segcopyCheckbox.isSelected();
    globals.useTranspose = transposeCheckbox.isSelected();
    if(sequenceCheckbox.isSelected()){
        globals.function.initializeSequenceFunction(sequenceTextfield.getText(), globals.functionSize);
        globals.sequenceFunction = true;
    }else{
        globals.function.initializeMathematicalFunction(functionString.getText(), globals.functionSize);
    }
    globals.opcodes = new Opcodes(globals, segcopyCheckbox.isSelected(), transposeCheckbox.isSelected(), memoryCheckbox.isSelected());
    globals.opcodeCounts = new long[globals.maxOperators];
    controller.createNewPopulation(globals, statsPath.getText());
}//GEN-LAST:event_runButtonActionPerformed

private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
    controller.stopSimulation();
}//GEN-LAST:event_stopButtonActionPerformed
public void setGenomeLabel(String newGenomeString){
    genomeContents.setText("<html>" + newGenomeString + "</hmtl>");
}
public void setStackLabel(String newStackString){
    stackContents.setText(newStackString);
}
public void setXLabel(String newX){
    currentX.setText(newX);
}
public void setPreviousReturns(String oldX, String oldExpected){
    returnedX.setText(oldX);
    expectedX.setText(oldExpected);
}
public void setInstructionCountLabel(String instructionCount){
    organismInstructionCount.setText(instructionCount);
}
public void setMemoryLabel(String memoryString){
    memoryLabel.setText(memoryString);
}
private void loadGenomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadGenomeButtonActionPerformed
    Globals globals = new Globals();
    globals.reverseFunction = orgviewReverseCheckbox.isSelected();
    globals.functionSize = Integer.parseInt(orgviewFunctionSize.getText());
    globals.opcodes = new Opcodes(globals, segcopyCheckbox.isSelected(), transposeCheckbox.isSelected(), memoryCheckbox.isSelected());
    globals.opcodeCounts = new long[globals.maxOperators];
    if(orgviewSequenceCheckbox.isSelected()){
        controller.loadGenome(genomeToLoad.getText(), orgviewSequenceString.getText(), true, globals);
    }else{
        controller.loadGenome(genomeToLoad.getText(), orgviewFunctionString.getText(), false, globals);
    }
}//GEN-LAST:event_loadGenomeButtonActionPerformed

private void stepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepButtonActionPerformed
    controller.step();
}//GEN-LAST:event_stepButtonActionPerformed

private void jumpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumpButtonActionPerformed
    controller.jump();
}//GEN-LAST:event_jumpButtonActionPerformed

private void crossoverFrequencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crossoverFrequencyActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_crossoverFrequencyActionPerformed

private void functionStringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_functionStringActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_functionStringActionPerformed

private void sequenceTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequenceTextfieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_sequenceTextfieldActionPerformed

private void sequenceCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequenceCheckboxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_sequenceCheckboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AgingRadioButton;
    private javax.swing.JRadioButton DeathRadioButton;
    private javax.swing.JRadioButton ElitismRadioButton;
    private javax.swing.JTextField bSize;
    private javax.swing.JTextField crossoverFrequency;
    private javax.swing.JLabel currentX;
    private javax.swing.JTextField eSize;
    private javax.swing.JLabel expectedX;
    private javax.swing.JTextField functionSize;
    private javax.swing.JTextField functionString;
    private javax.swing.JTextField gSize;
    private javax.swing.JLabel genomeContents;
    private javax.swing.JTextArea genomeToLoad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jumpButton;
    private javax.swing.JButton loadGenomeButton;
    private javax.swing.JTextField maxAgeTextField;
    private javax.swing.JTextField maxInstructions;
    private javax.swing.JCheckBox memoryCheckbox;
    private javax.swing.JLabel memoryLabel;
    private javax.swing.JTextField mutationFrequency;
    private javax.swing.JTextField numRuns;
    private javax.swing.JLabel organismInstructionCount;
    private javax.swing.JPanel organismView;
    private javax.swing.JTextField orgviewFunctionSize;
    private javax.swing.JTextField orgviewFunctionString;
    private javax.swing.JCheckBox orgviewReverseCheckbox;
    private javax.swing.JCheckBox orgviewSequenceCheckbox;
    private javax.swing.JTextField orgviewSequenceString;
    private javax.swing.JTextField pSize;
    private javax.swing.JPanel populationView;
    private javax.swing.JLabel returnedX;
    private javax.swing.JCheckBox reverseCheckbox;
    private javax.swing.JButton runButton;
    private javax.swing.JCheckBox seedCheckbox;
    private javax.swing.JTextField seedTextField;
    private javax.swing.JCheckBox segcopyCheckbox;
    private javax.swing.JCheckBox sequenceCheckbox;
    private javax.swing.JTextField sequenceTextfield;
    private javax.swing.JLabel stackContents;
    private javax.swing.JTextField statsPath;
    private javax.swing.JButton stepButton;
    private javax.swing.JButton stopButton;
    private javax.swing.ButtonGroup strategy;
    private javax.swing.JCheckBox transposeCheckbox;
    // End of variables declaration//GEN-END:variables


}
